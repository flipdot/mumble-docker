name: Docker-Compose CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build_docker_images:
    strategy:
      matrix:
        image_name:
          - mumble
          - botamusique
    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # celt submodule has dumb http transport
        submodules: recursive

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Set image ids
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/${{ matrix.image_name }}
        echo "github.ref=${{ github.ref }}"
        echo "github.head_ref=${{ github.head_ref }}"
        echo "github.base_ref=${{ github.base_ref }}"

        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          # Master
          VERSION=latest
        elif [[ "${{ github.ref }}" == "refs/pull/"* ]]; then
          # Pull-Request
          VERSION="pr-${{ github.head_ref }}"
        elif [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
          # Tag
          VERSION=$(echo "${{ github.ref }}" | sed -e 's#^refs/tags/##')
        else
          VERSION=$(echo "${{ github.sha }}")
        fi

        echo "::set-env name=IMAGE_ID::$IMAGE_ID"
        echo "::set-output name=IMAGE_ID::$IMAGE_ID"
        echo "::set-env name=VERSION::$VERSION"
        echo "::set-output name=VERSION::$VERSION"

    - name: Build the Mumble image
      if: matrix.image_name == 'mumble'
      run: docker build -t image mumble/.
    - name: Build the botamusique image
      if: matrix.image_name == 'botamusique'
      run: docker build -t image plugins/botamusique-docker/.

    - name: Tag and push
      run: |
        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

        echo "$IMAGE_ID:$VERSION" > image.txt

    - name: Publish package name
      uses: actions/upload-artifact@v1
      with:
        name: image_${{ matrix.image_name }}
        path: image.txt

  test:
    runs-on: ubuntu-latest
    needs: build_docker_images

    steps:
    - uses: actions/checkout@v2 # no need for submodules here

    - name: Download package name for mumble
      uses: actions/download-artifact@v1
      with:
        name: image_mumble
    - name: Download package name for botamusique
      uses: actions/download-artifact@v1
      with:
        name: image_botamusique

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Generate a fake certificate
      run: |
        openssl req -x509 \
          -newkey rsa:4096 \
          -nodes \
          -keyout data/privkey.pem \
          -out data/fullchain.pem \
          -days 30 \
          -subj '/CN=localhost'

    - name: Modify docker-compose.yaml
      run: |
        sed -i "s#docker\.pkg\.github\.com/.*mumble:latest#$(cat image_mumble/image.txt)#" docker-compose.yaml  
        sed -i "s#docker\.pkg\.github\.com/.*botamusique:latest#$(cat image_botamusique/image.txt)#" docker-compose.yaml
        cat docker-compose.yaml
    - name: Download containers
      run: docker-compose pull -q

    - name: Set permissions
      run: sudo chown -R 1000:1000 data

    - name: Amend plugin configs for fresh server
      run: sudo sed -i "s/^channel.*/channel = flipdot/" data/botamusique/configuration.ini

    - name: Run and test
      run: |
        docker-compose up &

        echo "=== Waiting for server to start... ==="
        success=false
        for i in {1..10}; do
          echo "=== Trying now ==="
          if python3 ping.py localhost 64738; then
            echo "=== Success! ==="
            success=true
            break
          fi
          sleep 1
        done
        if [ "$success" != true ]; then
          echo "=== Fail! ==="
          exit 1
        fi
        # wait a few, and do another snapshot for later
        sleep 5
        python3 ping.py localhost 64738 | tee ping.txt

    - name: Check mumble database exists
      run: '[ -s data/database.sqlite ]'

    - name: Check that botamusique started, too
      run: |
        if ! grep "users = 1" ping.txt; then
          echo "=== Botamusique broken ==="
          exit 1
        fi

    - name: Check botamusique database exists
      run: '[ -s data/botamusique/database.db ]'
